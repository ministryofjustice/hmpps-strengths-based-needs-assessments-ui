name: Get end-to-end test timings

on:
  workflow_call:
    inputs:
      spec-file-patterns:
        type: string
        required: true
        description: 'For example: e2e/**/*.cy.ts e2e/**/*.cy.js'
    outputs:
      timings:
        description: "timings.json"
        value: ${{ jobs.merge-timings.outputs.timings }}

permissions:
  contents: read

jobs:
  get-spec-files:
    runs-on: ubuntu-latest
    outputs:
      spec-files: ${{ steps.find-spec-files.outputs.spec-files }}
    steps:
      - uses: actions/checkout@v4
      - name: Find spec files
        id: find-spec-files
        run: |
          shopt -s globstar
          find ${{ inputs.spec-file-patterns }} -type f | jq -Rcn '[inputs | {path: ., id: gsub("[^a-zA-Z0-9]+"; "-") | rtrimstr("-")}]' > timings.json
          echo "spec-files=$(cat timings.json)" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.find-spec-files.outputs.spec-files }}

  restore-timings-cache:
    needs: get-spec-files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spec-file: ${{ fromJSON(needs.get-spec-files.outputs.spec-files) }}
    outputs:
      ${{ matrix.spec-file.id }}: ${{ steps.export-timing.outputs.timing }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore timing cache
        uses: actions/cache/restore@v4
        with:
          path: timings/${{ matrix.spec-file.id }}.json
          key: ${{ hashFiles(matrix.spec-file.path) }}
      - name: Export timing
        run: echo "timing=$(cat timings/${{ matrix.spec-file.id }}.json)" >> $GITHUB_OUTPUT
        id: export-timing

  merge-timings:
    needs: restore-timings-cache
    runs-on: ubuntu-latest
    outputs:
      timings: ${{ steps.merge-timings.outputs.timings }}
    steps:
      - name: Extract cached timings
        id: merge-timings
        run: |
          echo "timings=$(echo ${{ toJSON(needs.restore-timings-cache.outputs) }} | jq -c '{durations: [to_entries[].value]}')" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.merge-timings.outputs.timings }}
