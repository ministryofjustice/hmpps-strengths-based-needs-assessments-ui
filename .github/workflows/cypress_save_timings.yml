name: Save Cypress test timings to cache

on:
  workflow_call:
    inputs:
      timings:
        description: "Timings by container"
        required: true
        type: string

permissions:
  actions: write

jobs:
  save-timings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Merge container timings
        id: merge-container-timings
        run: |
          echo '${{ toJSON(inputs.timings) }}' \
            | jq 'to_entries | map({key: .key, value: (.value | fromjson)}) | from_entries' \
            | jq -r 'map(.durations) | add | map({spec, duration, hash: .spec})' \
            | jq -c '.[]' \
            | while read -r line; \
              do spec=$(echo "$line" | jq -r '.spec'); \
              hash=$(md5sum "$spec" 2>/dev/null | cut -d " " -f1 || echo "MISSING_FILE"); \
              echo "$line" | jq --arg hash "$hash" '. + {hash: $hash}'; \
            done \
            | jq -s '{durations: .}' > merged-container-timings.json
          cat merged-container-timings.json
          echo "timings=$(jq -c . < merged-container-timings.json)" >> $GITHUB_OUTPUT
      - name: Restore timings cache
        uses: actions/cache/restore@v4
        with:
          path: timings-cache.json
          key: timings-cache.json
      - name: Get cached timings
        id: get-cached-timings
        run: |
          if ls timings-cache.json; \
          then cat timings-cache.json && echo "timings=$(jq -c . < timings-cache.json)" >> $GITHUB_OUTPUT; \
          else echo "timings={\"durations\": []}" >> $GITHUB_OUTPUT; \
          fi
      - name: Get timings to cache
        id: get-timings-to-cache
        uses: ./.github/actions/cypress_get_timings_to_cache
        with:
          container-timings: '${{ steps.merge-container-timings.outputs.timings }}'
          cached-timings: '${{ steps.get-cached-timings.outputs.timings }}'
      - name: Create timings file to cache
        run: |
          echo '${{ steps.get-timings-to-cache.outputs.timings }}' > timings-cache.json
          cat timings-cache.json
      - name: Delete Previous Cache
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "timings-cache.json" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache timings
        uses: actions/cache/save@v4
        with:
          path: timings-cache.json
          key: timings-cache.json
